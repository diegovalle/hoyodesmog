- name: Clone hoyodesmog
  git: repo=https://github.com/diegovalle/hoyodesmog dest=/var/www/hoyodesmog.diegovalle.net force=yes

- name: Change persmissions of /var/www/hoyodesmog.diegovalle.net
  file: dest=/var/www/hoyodesmog.diegovalle.net owner=deploy group=www-data mode=0775 recurse=yes

- name: Install rJava
  apt: name="{{ packages }}" state=latest
  vars:
    packages:
      - r-cran-rjava


# Some package require lots of memory to compile
# Only install from source if we've got lots of memory
- name: Add R packages
  command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "if (! ('{{item}}' %in% installed.packages()[,'Package'])) install.packages(pkgs='{{item}}', repos='https://cloud.r-project.org');quit(save = 'no', status = !require('{{item}}'))"
  with_items:
    - ggplot2
    - viridis
    - devtools
    - dplyr
    #- methods
    #- jsonlite
    #- gstat
    #- sp
    - stringr
    #- chron
    #- ggmap
    #- caTools
    #- lubridate
    - mailR
    #- readr
    #- XML
    #- zoo
    - tidyr
    - rvest
    #- phylin
  vars:
    ansible_ssh_pipelining: true
    become: yes
    become_user: "{{deploy_user_name}}"
  when: ansible_memory_mb.real.total >= 2048

- name: add rrutter ppa
  apt_repository:
    repo: ppa:marutter/rrutter4.0
    update_cache: yes
  when: ansible_memory_mb.real.total < 2048
    
- name: add c2d4u repository
  apt_repository:
    repo: ppa:marutter/c2d4u4.0
    update_cache: yes
  when: ansible_memory_mb.real.total < 2048

- name: Install precompiled R packages
  apt: name="{{ packages }}" state=latest
  vars:
    packages:
      - r-cran-ggplot2
      - r-cran-viridis
      - r-cran-dplyr
      - r-cran-devtools
      - r-cran-readr
      - r-cran-stringr
      - r-cran-tidyr
  when: ansible_memory_mb.real.total < 2048

- name: Install github R packages
  command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "devtools::install_github('{{item}}')"
  with_items:
    - diegovalle/aire.zmvm
  vars:
    ansible_ssh_pipelining: true
    become: yes
    become_user: "{{deploy_user_name}}"

# - name: Download netlifyctl
#   get_url:
#     url: https://github.com/netlify/netlifyctl/releases/download/v0.1.4/netlifyctl-linux-amd64.tar.gz
#     dest: /tmp/netlifyctl-linux-amd64.tar.gz
#   vars:
#     ansible_ssh_pipelining: true
#     become: yes
#     become_user: "{{deploy_user_name}}"

# - name: Extract netlifyctl-linux-amd64.tar.gz
#   unarchive:
#     src: /tmp/netlifyctl-linux-amd64.tar.gz
#     dest: /var/www/hoyodesmog.diegovalle.net/R
#   vars:
#     ansible_ssh_pipelining: true
#     become: yes
#     become_user: "{{deploy_user_name}}"

# Cron Jobs
- cronvar:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    user: "{{deploy_user_name}}"
  with_items:
    - name: "SENDGRID_USER"
      value: "{{SENDGRID_USER}}"
    - name: "SENDGRID_PASS"
      value: "{{SENDGRID_PASS}}"
    - name: "HEATMAP_HEALTHCHECK"
      value: "{{HEATMAP_HEALTHCHECK_URL}}"
    - name: "FIREBASE_TOKEN"
      value: "{{FIREBASE_TOKEN}}"
    - name: "EMAIL_ADDRESS"
      value: "{{EMAIL_ADDRESS}}"
    - name: "SHELL"
      value: "/bin/bash"
  vars:
    ansible_ssh_pipelining: true
    become: yes
    become_user: "{{deploy_user_name}}"
  no_log: true

- name: cron job for hoyodesmog
  cron: name="Hoyodesmog hourly website" user=deploy job="/var/www/hoyodesmog.diegovalle.net/R/run-heatmap.sh >> /var/www/hoyodesmog.diegovalle.net/R/log-heatmap.txt 2>&1"
  vars:
    ansible_ssh_pipelining: true
    become: yes
    become_user: "{{deploy_user_name}}"
