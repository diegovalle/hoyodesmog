# SSL
- name: create group
  group:
    name: '{{ letsencrypt_group }}'

- name: create group
  group:
    name: '{{ nginx_user }}'
    system: yes

- name: create user
  user:
    name: '{{ letsencrypt_user }}'
    groups: '{{ letsencrypt_group }},{{ nginx_user }}'
    shell: /bin/bash
    home: /home/{{ letsencrypt_user }}

- name: Ensure letencrypt home directory exists
  file: path=/home/{{ letsencrypt_user }}/ssl state=directory owner={{ letsencrypt_user }}  mode=0770 recurse=yes


- name: copy scripts to create csr and renew the cert
  copy: src={{ item }} dest=/home/{{ letsencrypt_user }}/ssl/{{ item }} owner={{ letsencrypt_user }} mode=0775
  with_items:
    - create_csr.sh
    - renew_cert.sh

- name: create challenges directory
  file:
    path: /var/www/challenges
    state: directory
    owner: '{{ letsencrypt_user }}'
    group: '{{ nginx_user }}'

- name: create hoyodesmog ssl certs directory
  file:
    path: /etc/nginx/ssl/hoyodesmog.diegovalle.net/
    state: directory
    owner: root
    group: '{{ letsencrypt_user }}'
    mode: 0770

- name: create default ssl certs directory
  file:
    path: /etc/nginx/ssl/default/
    state: directory
    owner: root
    group: '{{ letsencrypt_user }}'
    mode: 0770

- name: create challenges directory
  file:
    path: /var/www/challenges
    state: directory
    owner: '{{ letsencrypt_user }}'
    group: '{{ nginx_user }}'

- name: letsencrypt user has permission to restart nginx
  lineinfile:
    'dest=/etc/sudoers
    line="{{ letsencrypt_user }}  ALL=NOPASSWD: /usr/sbin/nginx -s reload"
    state=present
    validate="visudo -cf %s"'

- name: generate 2048 dhparam
  command: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048 creates=/etc/nginx/ssl/dhparam.pem
  notify: Restart nginx

- name: Generate self-signed certificates for the default site
  shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/default/nginx.key -out /etc/nginx/ssl/default/nginx.crt   -subj "/C=US/ST=CA/O=example.com/CN=example.com"
  when: testing == 'true'
  notify: Restart nginx

- name: Copy over self-signed certificates
  when: testing == 'true'
  copy: src={{ item }} dest=/etc/nginx/ssl/hoyodesmog.diegovalle.net/{{ item }}
  with_items:
    - chained.pem
    - domain.key
  notify: Restart nginx

- name: letsencrypt user has permission to restart nginx
  lineinfile:
    'dest=/etc/sudoers
    line="{{ letsencrypt_user }} ALL=NOPASSWD: /usr/sbin/nginx -s reload"
    state=present
    validate="visudo -cf %s"'
